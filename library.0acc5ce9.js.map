{"mappings":"oeAAAA,EAAA,S,6ECAA,IAAAC,EAAAD,EAAA,S,0BAWcC,EAAAC,UAyBsC,IAAhDC,EAAUC,EAGVD,EAlCe,mBAiCfE,EAAAC,KAAKC,WAAWC,YAegB,SAAdC,EAAMC,GACxB,MAAMC,EAASC,EAAAC,QAAQC,KAAKC,aACvBJ,EAAOK,SAASP,IAlDN,mBAkDgBC,EAAIF,YAI5BS,QAAQC,IAAI,iDAHfP,EAAOQ,KAAKV,GACZG,EAAAC,QAAQO,KAAKL,YAAaJ,GAC1BD,EAAIF,YApDU,sB,EAyDY,SAANa,EAAMX,GAC9B,MAAMC,EAASC,EAAAC,QAAQC,KAAKC,aACxBJ,EAAOK,SAASK,IA3DF,wBA2DYX,EAAIF,aAC9BG,EAASA,EAAOW,QAAO,EAACC,GAAEA,KAASA,IAAOF,EAAME,KAChDX,EAAAC,QAAQO,KAAKL,YAAaJ,GACzBD,EAAIF,YA/DM,kBAgERS,QAAQC,IAAI,oD,EAzBnBd,EArCa,iBAoCbC,EAAAC,KAAKkB,SAAShB,YA8BkB,SAAhBiB,EAAMf,GACtB,MAAMC,EAASC,EAAAC,QAAQC,KAAKY,WACvBf,EAAOK,SAASS,IApER,iBAoEkBf,EAAIF,YAI5BS,QAAQC,IAAI,gDAHfP,EAAOQ,KAAKM,GACZb,EAAAC,QAAQO,KAAKM,UAAWf,GACvBD,EAAIF,YAtEO,oB,EA2EqC,SAA/BmB,EAAMjB,GAC5B,MAAMC,EAASC,EAAAC,QAAQC,KAAKY,WACxBf,EAAOK,SAASW,IA7EJ,sBA6EejB,EAAIF,aAC/BG,EAASA,EAAOW,QAAO,EAACC,GAAEA,KAASA,IAAOI,EAAMJ,KAChDX,EAAAC,QAAQO,KAAKM,UAAWf,GACvBD,EAAIF,YAjFI,gBAkFNS,QAAQC,IAAI,kD,EAxCvBb,EAAAC,KAAKsB,gBAAgBC,iBAAiB,QAAS1B,GAC/CE,EAAAC,KAAKwB,cAAcD,iBAAiB,QAASzB,G","sources":["src/library.js","src/js/modal_button_storage.js"],"sourcesContent":["import './js/swiper';\nimport './js/closeModal';\nimport './js/loader';\nimport './js/storage';\nimport './js/serviseAPI';\nimport './js/onFirstRender';\nimport './js/modal_footer';\nimport './js/queue';\nimport './js/modal_button_storage';\nimport './js/paginator';\nimport './js/modalMovie';\n","import {movieData } from \"./modalMovie\";\nimport storage from \"./storage\";\nimport {refs} from \"./refs\";\n\n//чарівні рядки)\nconst addWatched = \"ADD TO WATCHED\";\nconst removeWatched = \"REMOVE FROM WATCHED\";\nconst addQueue = \"ADD TO QUEUE\";\nconst removeQueue = \"REMOVE FROM QUEUE\";\n\n\nconst movie = movieData;\n//************************************* */\n\n//перевіряє чи Є цей movie в сховищі WATCHED і дає кнопці відповіний напис\nfunction isWatched(movie,btn){\n    const movies = storage.load(WATCHED_KEY);\n    if (!movies.includes(movie)) {\n         btn.textContent = addWatched;  //чи додавати відповідний клас\n    }\n     else btn.textContent = removeWatched; //чи додавати відповідний клас?\n}\n//перевіряє чи Є цей movie в сховищі QUEUE і дає кнопці відповіний напис?\nfunction isQueue(movie,btn) {\n    const movies = storage.load(QUEUE_KEY);\n    if (!movies.includes(movie)) {\n         btn.textContent = addQueue; //чи додавати відповідний клас?\n    }\n     else btn.textContent = removeQueue; //чи додавати відповідний клас?\n}\n//при відкритті модалки перевіряємо чи movie Є в сховищі по\n//по ключах в масивах WATCHED/QUEUE і даємо відповідний напис на кнопках\n//ВИКЛИКАЮТЬСЯ В modalMovie\n// isWatched(movie, addToWatchedBtn);\n// isQueue(movie, addToQueueBtn);\n//в залежності що написано на кнопках => різні функції fWatched, fQueue на лісенери\nlet fWatched, fQueue;\n\nif (refs.btnWatched.textContent === addWatched) {\n    fWatched = addToWatched;\n} else {\n    fWatched = removeFromWatched;\n}\nif (refs.btnQueue.textContent === addQueue) {\n    fQueue = addToQueue;\n} else {\n    fQueue = removeFromQueue;\n}\n//вішаємо лісенери на кнопки і функціі для них\nrefs.addToWatchedBtn.addEventListener(\"click\", fWatched);\nrefs.addToQueueBtn.addEventListener(\"click\", fQueue);   \n\n//при натисненні ADD TO WATCHED додаємо movie в localStorage якщо там його нема\nfunction addToWatched(movie,btn) { //btn це ref на кнопку в модалці  WATChED\n    const movies = storage.load(WATCHED_KEY);\n    if (!movies.includes(movie) && btn.textContent === addWatched) { //\n        movies.push(movie);\n        storage.save(WATCHED_KEY, movies);\n        btn.textContent = removeWatched;\n    } else console.log('Цей фільм вже є в watched або кнопка НЕ ADD!');\n}\n\n//при натисненні REMOVE FROM WATCHED видаляємо з localStorage якщо він там  є\nfunction removeFromWatched (movie,btn){ //btn це ref на кнопку в модалці  WATChED\n    const movies = storage.load(WATCHED_KEY);\n    if (movies.includes(movie) && btn.textContent === removeWatched) {\n        movies = movies.filter(({ id }) => id !== movie.id)\n        storage.save(WATCHED_KEY, movies);\n         btn.textContent = addWatched;\n    } else console.log('Цього фільма нема в watched або кнопка НЕ REMOVE!');\n}\n\n//при натисненні ADD TO QUEUE додаємо в localStorage якщо там його нема\nfunction addToQueue(movie,btn) { //btn це ref на кнопку в модалці   QUEUE \n    const movies = storage.load(QUEUE_KEY);\n    if (!movies.includes(movie) && btn.textContent === addQueue) {\n        movies.push(movie);\n        storage.save(QUEUE_KEY, movies);\n         btn.textContent = removeQueue;\n    } else console.log('Цей фільм вже є в queue або кнопка НЕ  ADD!');\n}\n\n//при натисненні REMOVE FROM QUEUE видаляємо з localStorage якщо він там  є перевіряєемо textContent кнопки чи там REMOVE FROM QUEUE\nfunction removeFromQueue (movie,btn){ //btn це ref на кнопку в модалці  QUEUE\n    const movies = storage.load(QUEUE_KEY);\n    if (movies.includes(movie) &&  btn.textContent === removeQueue) {\n        movies = movies.filter(({ id }) => id !== movie.id)\n        storage.save(QUEUE_KEY, movies);\n         btn.textContent = addQueue;\n    } else console.log('Цього фільма нема в queue або кнопка НЕ REMOVE!');\n}\n//чи щось потрібно пеерендирити при закритті модалки ???\n//при закритті модалки чи потрібно знімати лісенери?\n"],"names":["parcelRequire","$bnGUG","movieData","$9327c38f9db0b0da$var$fWatched","$9327c38f9db0b0da$var$fQueue","$krGWQ","refs","btnWatched","textContent","movie3","btn","movies","$5uEKZ","default","load","WATCHED_KEY","includes","console","log","push","save","movie4","filter","id","btnQueue","movie5","QUEUE_KEY","movie6","addToWatchedBtn","addEventListener","addToQueueBtn"],"version":3,"file":"library.0acc5ce9.js.map"}