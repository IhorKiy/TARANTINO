{"mappings":"gfAAAA,EAAA,S,6ECAA,IAoCIC,EAAUC,EApCdC,EAAAH,EAAA,S,0BAKMI,EAAa,iBACbC,EAAgB,sBAChBC,EAAW,eACXC,EAAc,oBAGNJ,EAAAK,UA4BVP,EADAQ,EAAAC,KAAKC,WAAWC,cAAgBR,EAeA,SAAdS,EAAMC,GACxB,IAAMC,EAASC,EAAAC,QAAQC,KAAKC,aACvBJ,EAAOK,SAASP,IAAUC,EAAIF,cAAgBR,EAI5CiB,QAAQC,IAAI,iDAHfP,EAAOQ,KAAKV,GACZG,EAAAC,QAAQO,KAAKL,YAAaJ,GAC1BD,EAAIF,YAAcP,E,EAKQ,SAANoB,EAAMX,GAC9B,IAAMC,EAASC,EAAAC,QAAQC,KAAKC,aACxBJ,EAAOK,SAASK,IAAUX,EAAIF,cAAgBP,GAC9CU,EAASA,EAAOW,QAAO,SAAAC,G,OAAKA,EAAFC,KAAgBH,EAAMG,E,IAChDZ,EAAAC,QAAQO,KAAKL,YAAaJ,GACzBD,EAAIF,YAAcR,GAChBiB,QAAQC,IAAI,oD,EAzBnBpB,EADAO,EAAAC,KAAKmB,SAASjB,cAAgBN,EA8BE,SAAhBwB,EAAMhB,GACtB,IAAMC,EAASC,EAAAC,QAAQC,KAAKa,WACvBhB,EAAOK,SAASU,IAAUhB,EAAIF,cAAgBN,EAI5Ce,QAAQC,IAAI,gDAHfP,EAAOQ,KAAKO,GACZd,EAAAC,QAAQO,KAAKO,UAAWhB,GACvBD,EAAIF,YAAcL,E,EAK8B,SAA/ByB,EAAMlB,GAC5B,IAAMC,EAASC,EAAAC,QAAQC,KAAKa,WACxBhB,EAAOK,SAASY,IAAWlB,EAAIF,cAAgBL,GAC/CQ,EAASA,EAAOW,QAAO,SAAAC,G,OAAKA,EAAFC,KAAgBI,EAAMJ,E,IAChDZ,EAAAC,QAAQO,KAAKO,UAAWhB,GACvBD,EAAIF,YAAcN,GAChBe,QAAQC,IAAI,kD,EAxCvBb,EAAAC,KAAKuB,gBAAgBC,iBAAiB,QAASjC,GAC/CQ,EAAAC,KAAKyB,cAAcD,iBAAiB,QAAShC,G","sources":["src/library.js","src/js/modal_button_storage.js"],"sourcesContent":["import './js/swiper';\nimport './js/closeModal';\nimport './js/loader';\nimport './js/storage';\nimport './js/serviseAPI';\nimport './js/onFirstRender';\nimport './js/modal_footer';\nimport './js/queue';\nimport './js/modal_button_storage';\nimport './js/paginator';\nimport './js/modalMovie';\n","import {movieData } from \"./modalMovie\";\nimport storage from \"./storage\";\nimport {refs} from \"./refs\";\n\n//чарівні рядки)\nconst addWatched = \"ADD TO WATCHED\";\nconst removeWatched = \"REMOVE FROM WATCHED\";\nconst addQueue = \"ADD TO QUEUE\";\nconst removeQueue = \"REMOVE FROM QUEUE\";\n\n\nconst movie = movieData;\n//************************************* */\n\n//перевіряє чи Є цей movie в сховищі WATCHED і дає кнопці відповіний напис\nfunction isWatched(movie,btn){\n    const movies = storage.load(WATCHED_KEY);\n    if (!movies.includes(movie)) {\n         btn.textContent = addWatched;  //чи додавати відповідний клас\n    }\n     else btn.textContent = removeWatched; //чи додавати відповідний клас?\n}\n//перевіряє чи Є цей movie в сховищі QUEUE і дає кнопці відповіний напис?\nfunction isQueue(movie,btn) {\n    const movies = storage.load(QUEUE_KEY);\n    if (!movies.includes(movie)) {\n         btn.textContent = addQueue; //чи додавати відповідний клас?\n    }\n     else btn.textContent = removeQueue; //чи додавати відповідний клас?\n}\n//при відкритті модалки перевіряємо чи movie Є в сховищі по\n//по ключах в масивах WATCHED/QUEUE і даємо відповідний напис на кнопках\n//ВИКЛИКАЮТЬСЯ В modalMovie\n// isWatched(movie, addToWatchedBtn);\n// isQueue(movie, addToQueueBtn);\n//в залежності що написано на кнопках => різні функції fWatched, fQueue на лісенери\nlet fWatched, fQueue;\n\nif (refs.btnWatched.textContent === addWatched) {\n    fWatched = addToWatched;\n} else {\n    fWatched = removeFromWatched;\n}\nif (refs.btnQueue.textContent === addQueue) {\n    fQueue = addToQueue;\n} else {\n    fQueue = removeFromQueue;\n}\n//вішаємо лісенери на кнопки і функціі для них\nrefs.addToWatchedBtn.addEventListener(\"click\", fWatched);\nrefs.addToQueueBtn.addEventListener(\"click\", fQueue);   \n\n//при натисненні ADD TO WATCHED додаємо movie в localStorage якщо там його нема\nfunction addToWatched(movie,btn) { //btn це ref на кнопку в модалці  WATChED\n    const movies = storage.load(WATCHED_KEY);\n    if (!movies.includes(movie) && btn.textContent === addWatched) { //\n        movies.push(movie);\n        storage.save(WATCHED_KEY, movies);\n        btn.textContent = removeWatched;\n    } else console.log('Цей фільм вже є в watched або кнопка НЕ ADD!');\n}\n\n//при натисненні REMOVE FROM WATCHED видаляємо з localStorage якщо він там  є\nfunction removeFromWatched (movie,btn){ //btn це ref на кнопку в модалці  WATChED\n    const movies = storage.load(WATCHED_KEY);\n    if (movies.includes(movie) && btn.textContent === removeWatched) {\n        movies = movies.filter(({ id }) => id !== movie.id)\n        storage.save(WATCHED_KEY, movies);\n         btn.textContent = addWatched;\n    } else console.log('Цього фільма нема в watched або кнопка НЕ REMOVE!');\n}\n\n//при натисненні ADD TO QUEUE додаємо в localStorage якщо там його нема\nfunction addToQueue(movie,btn) { //btn це ref на кнопку в модалці   QUEUE \n    const movies = storage.load(QUEUE_KEY);\n    if (!movies.includes(movie) && btn.textContent === addQueue) {\n        movies.push(movie);\n        storage.save(QUEUE_KEY, movies);\n         btn.textContent = removeQueue;\n    } else console.log('Цей фільм вже є в queue або кнопка НЕ  ADD!');\n}\n\n//при натисненні REMOVE FROM QUEUE видаляємо з localStorage якщо він там  є перевіряєемо textContent кнопки чи там REMOVE FROM QUEUE\nfunction removeFromQueue (movie,btn){ //btn це ref на кнопку в модалці  QUEUE\n    const movies = storage.load(QUEUE_KEY);\n    if (movies.includes(movie) &&  btn.textContent === removeQueue) {\n        movies = movies.filter(({ id }) => id !== movie.id)\n        storage.save(QUEUE_KEY, movies);\n         btn.textContent = addQueue;\n    } else console.log('Цього фільма нема в queue або кнопка НЕ REMOVE!');\n}\n//чи щось потрібно пеерендирити при закритті модалки ???\n//при закритті модалки чи потрібно знімати лісенери?\n"],"names":["parcelRequire","$4fea712e7c9f9e1d$var$fWatched","$4fea712e7c9f9e1d$var$fQueue","$8AEpj","$4fea712e7c9f9e1d$var$addWatched","$4fea712e7c9f9e1d$var$removeWatched","$4fea712e7c9f9e1d$var$addQueue","$4fea712e7c9f9e1d$var$removeQueue","movieData","$4Nugj","refs","btnWatched","textContent","movie3","btn","movies","$jzQFI","default","load","WATCHED_KEY","includes","console","log","push","save","movie4","filter","param","id","btnQueue","movie5","QUEUE_KEY","movie6","addToWatchedBtn","addEventListener","addToQueueBtn"],"version":3,"file":"library.033cf91d.js.map"}